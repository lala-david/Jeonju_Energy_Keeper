import json
import pandas as pd
 

 
data = [
  { "행정동": "진북동", "결과값": 2187133.9682246069 },
  { "행정동": "인후1동", "결과값": 2980843.8555627679 },
  { "행정동": "인후2동", "결과값": 1845920.9160032659 },
  { "행정동": "인후3동", "결과값": 5181193.0024725553 },
  { "행정동": "덕진동", "결과값": 469507.42432832 },
  { "행정동": "금암1동", "결과값": 1386294.8052417513 },
  { "행정동": "금암2동", "결과값": 1468956.2683616229 },
  { "행정동": "팔복동", "결과값": 33507.8603454878 },
  { "행정동": "우아1동", "결과값": 930866.6269504469 },
  { "행정동": "우아2동", "결과값": 1062312.2526715877 },
  { "행정동": "호성동", "결과값": 4492662.7199546695 },
  { "행정동": "송천1동", "결과값": 1684463.8570187446 },
  { "행정동": "송천2동", "결과값": 687081.2225039469 },
  { "행정동": "조촌동", "결과값": 1781763.055076526 },
  { "행정동": "여의동", "결과값": 2480708.585317906 },
  { "행정동": "혁신동", "결과값": 328416.1846689969 },
  { "행정동": "중앙동", "결과값": 1488178.6137933875 },
  { "행정동": "풍남동", "결과값": 935746.3197927679 },
  { "행정동": "노송동", "결과값": 7874043.4613548787 },
  { "행정동": "완산동", "결과값": 760346.2563354052 },
  { "행정동": "동서학동", "결과값": 1984522.9611577194 },
  { "행정동": "서서학동", "결과값": 2245406.8294404028 },
  { "행정동": "중화산1동", "결과값": 1490358.8680188532 },
  { "행정동": "중화산2동", "결과값": 2062606.9585542418 },
  { "행정동": "평화1동", "결과값": 587638.907239547 },
  { "행정동": "평화2동", "결과값": 2099827.9953010641 },
  { "행정동": "서신동", "결과값": 834796.134526436 },
  { "행정동": "삼천1동", "결과값": 515807.8683366986 },
  { "행정동": "삼천2동", "결과값": 619273.196513045 },
  { "행정동": "삼천3동", "결과값": 1002777.750901868 },
  { "행정동": "효자1동", "결과값": 474718.4428061832 },
  { "행정동": "효자2동", "결과값": 352270.0570999444 },
  { "행정동": "효자3동", "결과값": 526315.1959288506 },
  { "행정동": "효자4동", "결과값": 1493546.7783466931 },
  { "행정동": "효자5동", "결과값": 1360875.8128287836 }
]

# 데이터 프레임으로 변환하기
df = pd.DataFrame(data)

# Min-Max 스케일링 함수
def min_max_scaling(value, min_val, max_val):
    return round((value - min_val) / (max_val - min_val), 5)

# '합계' 열에 대한 Min-Max 스케일링 적용
min_value = df['결과값'].min()
max_value = df['결과값'].max()
df['결과값'] = df['결과값'].apply(lambda x: min_max_scaling(x, min_value, max_value))
output_data = df.to_dict(orient='records')

with open('result.json', 'w', encoding='utf-8') as f:
    json.dump(output_data, f, ensure_ascii=False, indent=4)